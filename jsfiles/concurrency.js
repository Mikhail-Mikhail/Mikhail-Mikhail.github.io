//---------------------------------------------------------------------------------------
//
// JavaScript-сценарий: Создание параллельных потоков.
//
//---------------------------------------------------------------------------------------

 "use strict" //Использовать строгий режим ECMAScript 5, если браузер поддерживает его.

//---------------------------------------------------------------------------------------

 // Запустить функцию сразу после загрузки страницы.
  window.onload = PostConstruct;

 //--------------------------------------------------------------------------------------

  //Глобальная переменная.   
  var H4_info;

 //--------------------------------------------------------------------------------------

   // Функция, запускающаяся сразу после загрузки страницы.
   // Обработчик события "window.onload".
   
   function PostConstruct(){

     //Найти элемент заголовка <h4> по id.
     H4_info = document.getElementById("h4_info"); 
   }

 //--------------------------------------------------------------------------------------
 

  //Обработчик кнопки "Создать поток".


  function CreateWorkerBtnHandler(){
    
     //Найти окно для ввода количества операций по id.
     var QuantityElem = document.getElementById("QuantityInput"); 
 
      //Прочитать значение введенное в окне количества операций.
      var QuantityStr = QuantityElem.value;

       //Преобразовать строку в число.
       var Qnt = parseFloat(QuantityStr);

        // Создать параллельный поток и запустить в нем сценарий "MyThread.js".
        var worker = new Worker("../jsfiles/MyThread.js");

          //Обработчик события приема сообщения от параллельного потока "MyThread.js".
          worker.onmessage = function(e) {
            //Прочитать принятое сообщение.
            var result = e.data;
             alert("Поток успешно завершил вычисления. Выполнено вычислений = "+result);
              //Разрушить поток.
              worker.terminate();
          }

           //Отправить сообщение параллельному потоку "MyThread.js".
           //В сообщении передается количество вычислений для выполнения потоком.
          worker.postMessage(Qnt);

         //Отобразить информацию.
         H4_info.innerText = "Поток создан и запущен. Количество операций = "+QuantityStr+". Ждите сообщение о завершении!!!";
  }
//--------------------------------------------------------------------------------------
 